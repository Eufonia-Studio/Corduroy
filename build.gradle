plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

minecraft {
	accessWidener = file("src/main/resources/corduroy.accesswidener")
}

allprojects { project ->
	apply plugin: 'fabric-loom'
	apply plugin: 'maven-publish'
	apply plugin: 'java-library'

	repositories {
		mavenLocal()
	}

	dependencies {
		minecraft "com.mojang:minecraft:${project.minecraft_version}"
		mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
		modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
		modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
		modImplementation "dev.lazurite:toolbox:${project.toolbox_version}"
	}

	archivesBaseName = project.archives_base_name
	version = project.mod_version
	group = project.maven_group

	sourceSets {
		testmod {
			compileClasspath += main.compileClasspath
			runtimeClasspath += main.runtimeClasspath
		}
	}

	processResources {
		inputs.property "version", project.version

		filesMatching("fabric.mod.json") {
			expand "version": project.version
		}
	}

	tasks.withType(JavaCompile) {
		options.encoding = "UTF-8"
		it.options.release = 16
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}

	dependencies {
		testmodImplementation project.sourceSets.main.output
	}

	java {
		withSourcesJar()
	}

	jar {
		from("LICENSE") {
			rename { "${it}_${project.archivesBaseName}"}
		}
	}

	remapJar {
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				artifactId = 'corduroy'

				pom {
					name = 'Corduroy'
					description = 'A camera API for Minecraft.'
					url = 'https://github.com/LazuriteMC/Corduroy'
					developers {
						developer {
							id = 'bluevista'
							name = 'BlueVista'
							email = 'ethan@ejohnsons.com'
						}
					}
				}

				versionMapping {
					usage('java-api') {
						fromResolutionOf('runtimeClasspath')
					}
					usage('java-runtime') {
						fromResolutionResult()
					}
				}

				artifact(remapJar) {
					builtBy remapJar
				}

				artifact(sourcesJar) {
					builtBy remapSourcesJar
				}
			}
		}

		repositories {
			mavenLocal()

			maven {
				url = 'https://lazurite.dev/maven/releases'
				credentials {
					username = project.property("publish.lazurite.alias")
					password = project.property("publish.lazurite.secret")
				}
			}
		}
	}
}